services:
  frontend:
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/usr/app
      - /usr/app/node_modules
    # command: Overrides the default command specified by the CMD in the Dockerfile. 
    # Remove dev if you want to be in production mode.
    command: ["npm", "run", "dev"]
    depends_on:
      # - postgres
      - backend
    networks:
      - my-network

  postgres:
    image: postgres:15 # Package Version Supported based on Debian Version.
    container_name: postgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydb
    # ports:
    #   - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # restart: always
    networks:
      - my-network

  # Source: https://anasdidi.dev/articles/200713-docker-compose-postgres/
  # If connection refused: https://stackoverflow.com/questions/53610385/docker-postgres-and-pgadmin-4-connection-refused
  pgadmin:
    image: dpage/pgadmin4:9.1
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@pgadmin.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_LISTEN_PORT: 5432
    ports:
      - '5432:5432'
    volumes:
      - pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - my-network
  
  backend:
    build: ./backend
    container_name: backend
    ports:
      - '8080:8080'
    volumes:
      - ./backend:/usr/src
      # - /usr/src/node_modules
    depends_on:
      - postgres
    #   - pgadmin
    networks:
      - my-network

volumes:
  postgres_data:
  pgadmin:

networks:
  my-network:
